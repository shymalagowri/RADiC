/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/cuda/__init__.py:619: UserWarning: Can't initialize NVML
  warnings.warn("Can't initialize NVML")
===> begin calculating mean and variance for ResNet18
===> calculating mean and variance for ResNet18 end
  0%|          | 0/63 [00:00<?, ?it/s]  0%|          | 0/63 [00:00<?, ?it/s]
tensor([[[[0.7961, 0.7961, 0.7961,  ..., 0.0902, 0.0902, 0.0902],
          [0.7961, 0.7961, 0.7961,  ..., 0.0902, 0.0902, 0.0902],
          [0.7961, 0.7961, 0.7961,  ..., 0.0902, 0.0902, 0.0902],
          ...,
          [0.3294, 0.3294, 0.3294,  ..., 0.3647, 0.3647, 0.3647],
          [0.3294, 0.3294, 0.3294,  ..., 0.3647, 0.3647, 0.3647],
          [0.3294, 0.3294, 0.3294,  ..., 0.3647, 0.3647, 0.3647]],

         [[0.4157, 0.4157, 0.4157,  ..., 0.0471, 0.0471, 0.0471],
          [0.4157, 0.4157, 0.4157,  ..., 0.0471, 0.0471, 0.0471],
          [0.4157, 0.4157, 0.4157,  ..., 0.0471, 0.0471, 0.0471],
          ...,
          [0.5490, 0.5490, 0.5490,  ..., 0.5804, 0.5804, 0.5804],
          [0.5490, 0.5490, 0.5490,  ..., 0.5804, 0.5804, 0.5804],
          [0.5490, 0.5490, 0.5490,  ..., 0.5804, 0.5804, 0.5804]],

         [[0.4314, 0.4314, 0.4314,  ..., 0.2510, 0.2510, 0.2510],
          [0.4314, 0.4314, 0.4314,  ..., 0.2510, 0.2510, 0.2510],
          [0.4314, 0.4314, 0.4314,  ..., 0.2510, 0.2510, 0.2510],
          ...,
          [0.0588, 0.0588, 0.0588,  ..., 0.1137, 0.1137, 0.1137],
          [0.0588, 0.0588, 0.0588,  ..., 0.1137, 0.1137, 0.1137],
          [0.0588, 0.0588, 0.0588,  ..., 0.1137, 0.1137, 0.1137]]],


        [[[0.4314, 0.4314, 0.4314,  ..., 0.5216, 0.5216, 0.5216],
          [0.4314, 0.4314, 0.4314,  ..., 0.5216, 0.5216, 0.5216],
          [0.4314, 0.4314, 0.4314,  ..., 0.5216, 0.5216, 0.5216],
          ...,
          [0.6000, 0.6000, 0.6000,  ..., 0.8471, 0.8471, 0.8471],
          [0.6000, 0.6000, 0.6000,  ..., 0.8471, 0.8471, 0.8471],
          [0.6000, 0.6000, 0.6000,  ..., 0.8471, 0.8471, 0.8471]],

         [[0.4784, 0.4784, 0.4784,  ..., 0.6471, 0.6471, 0.6471],
          [0.4784, 0.4784, 0.4784,  ..., 0.6471, 0.6471, 0.6471],
          [0.4784, 0.4784, 0.4784,  ..., 0.6471, 0.6471, 0.6471],
          ...,
          [0.7020, 0.7020, 0.7020,  ..., 1.0000, 1.0000, 1.0000],
          [0.7020, 0.7020, 0.7020,  ..., 1.0000, 1.0000, 1.0000],
          [0.7020, 0.7020, 0.7020,  ..., 1.0000, 1.0000, 1.0000]],

         [[0.6118, 0.6118, 0.6118,  ..., 0.8157, 0.8157, 0.8157],
          [0.6118, 0.6118, 0.6118,  ..., 0.8157, 0.8157, 0.8157],
          [0.6118, 0.6118, 0.6118,  ..., 0.8157, 0.8157, 0.8157],
          ...,
          [0.5373, 0.5373, 0.5373,  ..., 0.8471, 0.8471, 0.8471],
          [0.5373, 0.5373, 0.5373,  ..., 0.8471, 0.8471, 0.8471],
          [0.5373, 0.5373, 0.5373,  ..., 0.8471, 0.8471, 0.8471]]],


        [[[0.3608, 0.3608, 0.3608,  ..., 0.6549, 0.6549, 0.6549],
          [0.3608, 0.3608, 0.3608,  ..., 0.6549, 0.6549, 0.6549],
          [0.3608, 0.3608, 0.3608,  ..., 0.6549, 0.6549, 0.6549],
          ...,
          [0.0000, 0.0000, 0.0000,  ..., 0.9725, 0.9725, 0.9725],
          [0.0000, 0.0000, 0.0000,  ..., 0.9725, 0.9725, 0.9725],
          [0.0000, 0.0000, 0.0000,  ..., 0.9725, 0.9725, 0.9725]],

         [[0.5333, 0.5333, 0.5333,  ..., 0.4980, 0.4980, 0.4980],
          [0.5333, 0.5333, 0.5333,  ..., 0.4980, 0.4980, 0.4980],
          [0.5333, 0.5333, 0.5333,  ..., 0.4980, 0.4980, 0.4980],
          ...,
          [0.0000, 0.0000, 0.0000,  ..., 0.9490, 0.9490, 0.9490],
          [0.0000, 0.0000, 0.0000,  ..., 0.9490, 0.9490, 0.9490],
          [0.0000, 0.0000, 0.0000,  ..., 0.9490, 0.9490, 0.9490]],

         [[0.6627, 0.6627, 0.6627,  ..., 0.6196, 0.6196, 0.6196],
          [0.6627, 0.6627, 0.6627,  ..., 0.6196, 0.6196, 0.6196],
          [0.6627, 0.6627, 0.6627,  ..., 0.6196, 0.6196, 0.6196],
          ...,
          [0.1961, 0.1961, 0.1961,  ..., 0.9137, 0.9137, 0.9137],
          [0.1961, 0.1961, 0.1961,  ..., 0.9137, 0.9137, 0.9137],
          [0.1961, 0.1961, 0.1961,  ..., 0.9137, 0.9137, 0.9137]]],


        ...,


        [[[0.4745, 0.4745, 0.4745,  ..., 0.7059, 0.7059, 0.7059],
          [0.4745, 0.4745, 0.4745,  ..., 0.7059, 0.7059, 0.7059],
          [0.4745, 0.4745, 0.4745,  ..., 0.7059, 0.7059, 0.7059],
          ...,
          [0.2353, 0.2353, 0.2353,  ..., 0.5412, 0.5412, 0.5412],
          [0.2353, 0.2353, 0.2353,  ..., 0.5412, 0.5412, 0.5412],
          [0.2353, 0.2353, 0.2353,  ..., 0.5412, 0.5412, 0.5412]],

         [[0.4314, 0.4314, 0.4314,  ..., 0.9843, 0.9843, 0.9843],
          [0.4314, 0.4314, 0.4314,  ..., 0.9843, 0.9843, 0.9843],
          [0.4314, 0.4314, 0.4314,  ..., 0.9843, 0.9843, 0.9843],
          ...,
          [0.4706, 0.4706, 0.4706,  ..., 0.1686, 0.1686, 0.1686],
          [0.4706, 0.4706, 0.4706,  ..., 0.1686, 0.1686, 0.1686],
          [0.4706, 0.4706, 0.4706,  ..., 0.1686, 0.1686, 0.1686]],

         [[0.4235, 0.4235, 0.4235,  ..., 0.7098, 0.7098, 0.7098],
          [0.4235, 0.4235, 0.4235,  ..., 0.7098, 0.7098, 0.7098],
          [0.4235, 0.4235, 0.4235,  ..., 0.7098, 0.7098, 0.7098],
          ...,
          [0.4078, 0.4078, 0.4078,  ..., 0.1137, 0.1137, 0.1137],
          [0.4078, 0.4078, 0.4078,  ..., 0.1137, 0.1137, 0.1137],
          [0.4078, 0.4078, 0.4078,  ..., 0.1137, 0.1137, 0.1137]]],


        [[[0.8706, 0.8706, 0.8706,  ..., 0.8078, 0.8078, 0.8078],
          [0.8706, 0.8706, 0.8706,  ..., 0.8078, 0.8078, 0.8078],
          [0.8706, 0.8706, 0.8706,  ..., 0.8078, 0.8078, 0.8078],
          ...,
          [0.3373, 0.3373, 0.3373,  ..., 0.0745, 0.0745, 0.0745],
          [0.3373, 0.3373, 0.3373,  ..., 0.0745, 0.0745, 0.0745],
          [0.3373, 0.3373, 0.3373,  ..., 0.0745, 0.0745, 0.0745]],

         [[0.6000, 0.6000, 0.6000,  ..., 0.8471, 0.8471, 0.8471],
          [0.6000, 0.6000, 0.6000,  ..., 0.8471, 0.8471, 0.8471],
          [0.6000, 0.6000, 0.6000,  ..., 0.8471, 0.8471, 0.8471],
          ...,
          [0.3569, 0.3569, 0.3569,  ..., 0.0824, 0.0824, 0.0824],
          [0.3569, 0.3569, 0.3569,  ..., 0.0824, 0.0824, 0.0824],
          [0.3569, 0.3569, 0.3569,  ..., 0.0824, 0.0824, 0.0824]],

         [[0.7059, 0.7059, 0.7059,  ..., 0.9804, 0.9804, 0.9804],
          [0.7059, 0.7059, 0.7059,  ..., 0.9804, 0.9804, 0.9804],
          [0.7059, 0.7059, 0.7059,  ..., 0.9804, 0.9804, 0.9804],
          ...,
          [0.0196, 0.0196, 0.0196,  ..., 0.0471, 0.0471, 0.0471],
          [0.0196, 0.0196, 0.0196,  ..., 0.0471, 0.0471, 0.0471],
          [0.0196, 0.0196, 0.0196,  ..., 0.0471, 0.0471, 0.0471]]],


        [[[0.5216, 0.5216, 0.5216,  ..., 0.7765, 0.7765, 0.7765],
          [0.5216, 0.5216, 0.5216,  ..., 0.7765, 0.7765, 0.7765],
          [0.5216, 0.5216, 0.5216,  ..., 0.7765, 0.7765, 0.7765],
          ...,
          [0.4471, 0.4471, 0.4471,  ..., 0.1059, 0.1059, 0.1059],
          [0.4471, 0.4471, 0.4471,  ..., 0.1059, 0.1059, 0.1059],
          [0.4471, 0.4471, 0.4471,  ..., 0.1059, 0.1059, 0.1059]],

         [[0.6039, 0.6039, 0.6039,  ..., 0.5412, 0.5412, 0.5412],
          [0.6039, 0.6039, 0.6039,  ..., 0.5412, 0.5412, 0.5412],
          [0.6039, 0.6039, 0.6039,  ..., 0.5412, 0.5412, 0.5412],
          ...,
          [0.4118, 0.4118, 0.4118,  ..., 0.4078, 0.4078, 0.4078],
          [0.4118, 0.4118, 0.4118,  ..., 0.4078, 0.4078, 0.4078],
          [0.4118, 0.4118, 0.4118,  ..., 0.4078, 0.4078, 0.4078]],

         [[0.7020, 0.7020, 0.7020,  ..., 0.6510, 0.6510, 0.6510],
          [0.7020, 0.7020, 0.7020,  ..., 0.6510, 0.6510, 0.6510],
          [0.7020, 0.7020, 0.7020,  ..., 0.6510, 0.6510, 0.6510],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.3529, 0.3529, 0.3529],
          [0.0392, 0.0392, 0.0392,  ..., 0.3529, 0.3529, 0.3529],
          [0.0392, 0.0392, 0.0392,  ..., 0.3529, 0.3529, 0.3529]]]],
       device='cuda:0') tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
Traceback (most recent call last):
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/main.py", line 64, in <module>
    main()
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/main.py", line 61, in main
    testTimeAdaptation(student, dataset_dir, attack_type)
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/main.py", line 51, in testTimeAdaptation
    evaluate_tta(loader, tta_model, 'RoTTA-P-Features', attack_type)
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/helper.py", line 73, in evaluate_tta
    output = tta_model((images, labels))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/base_adapter.py", line 22, in forward
    outputs = self.forward_and_adapt(x, self.model, self.optimizer)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/rotta.py", line 25, in forward_and_adapt
    ema_out = self.model_ema(batch_data)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/timm/models/resnet.py", line 635, in forward
    x = self.forward_features(x)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/timm/models/resnet.py", line 614, in forward_features
    x = self.conv1(x)
        ^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 460, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 456, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: conv2d() received an invalid combination of arguments - got (tuple, Parameter, NoneType, tuple, tuple, tuple, int), but expected one of:
 * (Tensor input, Tensor weight, Tensor bias, tuple of ints stride, tuple of ints padding, tuple of ints dilation, int groups)
      didn't match because some of the arguments have invalid types: (!tuple of (Tensor, Tensor)!, !Parameter!, !NoneType!, !tuple of (int, int)!, !tuple of (int, int)!, !tuple of (int, int)!, int)
 * (Tensor input, Tensor weight, Tensor bias, tuple of ints stride, str padding, tuple of ints dilation, int groups)
      didn't match because some of the arguments have invalid types: (!tuple of (Tensor, Tensor)!, !Parameter!, !NoneType!, !tuple of (int, int)!, !tuple of (int, int)!, !tuple of (int, int)!, int)

