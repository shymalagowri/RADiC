../Attacks/CIFAR-10/ResNet18/FGSM
===> begin calculating mean and variance for ResNet18
===> calculating mean and variance for ResNet18 end
  0%|          | 0/63 [00:00<?, ?it/s]  0%|          | 0/63 [00:00<?, ?it/s, accuracy=0.0625]  2%|▏         | 1/63 [00:00<00:08,  7.57it/s, accuracy=0.0625]  2%|▏         | 1/63 [00:00<00:08,  7.57it/s, accuracy=0.0312]  3%|▎         | 2/63 [00:00<00:13,  4.43it/s, accuracy=0.0312]  3%|▎         | 2/63 [00:00<00:13,  4.43it/s, accuracy=0.0833]  5%|▍         | 3/63 [00:00<00:11,  5.33it/s, accuracy=0.0833]  5%|▍         | 3/63 [00:00<00:11,  5.33it/s, accuracy=0.0625]  6%|▋         | 4/63 [00:00<00:14,  4.12it/s, accuracy=0.0625]  6%|▋         | 4/63 [00:01<00:14,  4.12it/s, accuracy=0.0875]  8%|▊         | 5/63 [00:01<00:13,  4.44it/s, accuracy=0.0875]  8%|▊         | 5/63 [00:01<00:13,  4.44it/s, accuracy=0.0729] 10%|▉         | 6/63 [00:01<00:16,  3.45it/s, accuracy=0.0729] 10%|▉         | 6/63 [00:01<00:16,  3.45it/s, accuracy=0.0893] 11%|█         | 7/63 [00:01<00:13,  4.06it/s, accuracy=0.0893] 11%|█         | 7/63 [00:02<00:13,  4.06it/s, accuracy=0.0781] 13%|█▎        | 8/63 [00:02<00:17,  3.17it/s, accuracy=0.0781] 13%|█▎        | 8/63 [00:02<00:17,  3.17it/s, accuracy=0.0972] 14%|█▍        | 9/63 [00:02<00:14,  3.76it/s, accuracy=0.0972] 14%|█▍        | 9/63 [00:02<00:14,  3.76it/s, accuracy=0.0875] 16%|█▌        | 10/63 [00:02<00:16,  3.15it/s, accuracy=0.0875] 16%|█▌        | 10/63 [00:02<00:16,  3.15it/s, accuracy=0.0994] 17%|█▋        | 11/63 [00:02<00:14,  3.71it/s, accuracy=0.0994] 17%|█▋        | 11/63 [00:03<00:14,  3.71it/s, accuracy=0.0911] 19%|█▉        | 12/63 [00:03<00:16,  3.14it/s, accuracy=0.0911] 19%|█▉        | 12/63 [00:03<00:16,  3.14it/s, accuracy=0.0913] 21%|██        | 13/63 [00:03<00:13,  3.72it/s, accuracy=0.0913] 21%|██        | 13/63 [00:03<00:13,  3.72it/s, accuracy=0.0848] 22%|██▏       | 14/63 [00:03<00:15,  3.15it/s, accuracy=0.0848] 22%|██▏       | 14/63 [00:04<00:15,  3.15it/s, accuracy=0.0938] 24%|██▍       | 15/63 [00:04<00:12,  3.74it/s, accuracy=0.0938] 24%|██▍       | 15/63 [00:04<00:12,  3.74it/s, accuracy=0.0879] 25%|██▌       | 16/63 [00:04<00:15,  3.07it/s, accuracy=0.0879] 25%|██▌       | 16/63 [00:04<00:15,  3.07it/s, accuracy=0.0938] 27%|██▋       | 17/63 [00:04<00:12,  3.65it/s, accuracy=0.0938] 27%|██▋       | 17/63 [00:05<00:12,  3.65it/s, accuracy=0.0885] 29%|██▊       | 18/63 [00:05<00:14,  3.11it/s, accuracy=0.0885] 29%|██▊       | 18/63 [00:05<00:14,  3.11it/s, accuracy=0.0938] 30%|███       | 19/63 [00:05<00:11,  3.69it/s, accuracy=0.0938] 30%|███       | 19/63 [00:05<00:11,  3.69it/s, accuracy=0.0891] 32%|███▏      | 20/63 [00:05<00:13,  3.09it/s, accuracy=0.0891] 32%|███▏      | 20/63 [00:05<00:13,  3.09it/s, accuracy=0.0923] 33%|███▎      | 21/63 [00:05<00:11,  3.65it/s, accuracy=0.0923] 33%|███▎      | 21/63 [00:06<00:11,  3.65it/s, accuracy=0.0881] 35%|███▍      | 22/63 [00:06<00:13,  3.10it/s, accuracy=0.0881] 35%|███▍      | 22/63 [00:06<00:13,  3.10it/s, accuracy=0.0883] 37%|███▋      | 23/63 [00:06<00:10,  3.66it/s, accuracy=0.0883] 37%|███▋      | 23/63 [00:06<00:10,  3.66it/s, accuracy=0.0846] 38%|███▊      | 24/63 [00:06<00:12,  3.13it/s, accuracy=0.0846] 38%|███▊      | 24/63 [00:07<00:12,  3.13it/s, accuracy=0.0925] 40%|███▉      | 25/63 [00:07<00:10,  3.69it/s, accuracy=0.0925] 40%|███▉      | 25/63 [00:07<00:10,  3.69it/s, accuracy=0.0889] 41%|████▏     | 26/63 [00:07<00:11,  3.13it/s, accuracy=0.0889] 41%|████▏     | 26/63 [00:07<00:11,  3.13it/s, accuracy=0.0972] 43%|████▎     | 27/63 [00:07<00:09,  3.71it/s, accuracy=0.0972] 43%|████▎     | 27/63 [00:08<00:09,  3.71it/s, accuracy=0.0938] 44%|████▍     | 28/63 [00:08<00:11,  2.95it/s, accuracy=0.0938] 44%|████▍     | 28/63 [00:08<00:11,  2.95it/s, accuracy=0.0959] 46%|████▌     | 29/63 [00:08<00:09,  3.52it/s, accuracy=0.0959] 46%|████▌     | 29/63 [00:08<00:09,  3.52it/s, accuracy=0.0927] 48%|████▊     | 30/63 [00:08<00:10,  3.05it/s, accuracy=0.0927] 48%|████▊     | 30/63 [00:08<00:10,  3.05it/s, accuracy=0.0917] 49%|████▉     | 31/63 [00:08<00:08,  3.64it/s, accuracy=0.0917] 49%|████▉     | 31/63 [00:09<00:08,  3.64it/s, accuracy=0.0889] 51%|█████     | 32/63 [00:09<00:10,  3.09it/s, accuracy=0.0889] 51%|█████     | 32/63 [00:09<00:10,  3.09it/s, accuracy=0.0956] 52%|█████▏    | 33/63 [00:09<00:08,  3.67it/s, accuracy=0.0956] 52%|█████▏    | 33/63 [00:09<00:08,  3.67it/s, accuracy=0.0928] 54%|█████▍    | 34/63 [00:09<00:09,  3.11it/s, accuracy=0.0928] 54%|█████▍    | 34/63 [00:10<00:09,  3.11it/s, accuracy=0.0946] 56%|█████▌    | 35/63 [00:10<00:07,  3.70it/s, accuracy=0.0946] 56%|█████▌    | 35/63 [00:10<00:07,  3.70it/s, accuracy=0.092]  57%|█████▋    | 36/63 [00:10<00:09,  2.91it/s, accuracy=0.092] 57%|█████▋    | 36/63 [00:10<00:09,  2.91it/s, accuracy=0.0946] 59%|█████▊    | 37/63 [00:10<00:07,  3.48it/s, accuracy=0.0946] 59%|█████▊    | 37/63 [00:11<00:07,  3.48it/s, accuracy=0.0921] 60%|██████    | 38/63 [00:11<00:08,  3.03it/s, accuracy=0.0921] 60%|██████    | 38/63 [00:11<00:08,  3.03it/s, accuracy=0.0913] 62%|██████▏   | 39/63 [00:11<00:06,  3.58it/s, accuracy=0.0913] 62%|██████▏   | 39/63 [00:11<00:06,  3.58it/s, accuracy=0.0891] 63%|██████▎   | 40/63 [00:11<00:07,  3.01it/s, accuracy=0.0891] 63%|██████▎   | 40/63 [00:11<00:07,  3.01it/s, accuracy=0.0884] 65%|██████▌   | 41/63 [00:11<00:06,  3.58it/s, accuracy=0.0884] 65%|██████▌   | 41/63 [00:12<00:06,  3.58it/s, accuracy=0.0863] 67%|██████▋   | 42/63 [00:12<00:06,  3.08it/s, accuracy=0.0863] 67%|██████▋   | 42/63 [00:12<00:06,  3.08it/s, accuracy=0.0894] 68%|██████▊   | 43/63 [00:12<00:05,  3.65it/s, accuracy=0.0894] 68%|██████▊   | 43/63 [00:12<00:05,  3.65it/s, accuracy=0.0874] 70%|██████▉   | 44/63 [00:12<00:06,  3.11it/s, accuracy=0.0874] 70%|██████▉   | 44/63 [00:13<00:06,  3.11it/s, accuracy=0.0868] 71%|███████▏  | 45/63 [00:13<00:04,  3.68it/s, accuracy=0.0868] 71%|███████▏  | 45/63 [00:13<00:04,  3.68it/s, accuracy=0.0849] 73%|███████▎  | 46/63 [00:13<00:05,  3.10it/s, accuracy=0.0849] 73%|███████▎  | 46/63 [00:13<00:05,  3.10it/s, accuracy=0.0871] 75%|███████▍  | 47/63 [00:13<00:04,  3.66it/s, accuracy=0.0871] 75%|███████▍  | 47/63 [00:14<00:04,  3.66it/s, accuracy=0.0853] 76%|███████▌  | 48/63 [00:14<00:04,  3.12it/s, accuracy=0.0853] 76%|███████▌  | 48/63 [00:14<00:04,  3.12it/s, accuracy=0.0861] 78%|███████▊  | 49/63 [00:14<00:03,  3.69it/s, accuracy=0.0861] 78%|███████▊  | 49/63 [00:14<00:03,  3.69it/s, accuracy=0.0844] 79%|███████▉  | 50/63 [00:14<00:04,  3.14it/s, accuracy=0.0844] 79%|███████▉  | 50/63 [00:14<00:04,  3.14it/s, accuracy=0.0876] 81%|████████  | 51/63 [00:14<00:03,  3.72it/s, accuracy=0.0876] 81%|████████  | 51/63 [00:15<00:03,  3.72it/s, accuracy=0.0859] 83%|████████▎ | 52/63 [00:15<00:03,  2.95it/s, accuracy=0.0859] 83%|████████▎ | 52/63 [00:15<00:03,  2.95it/s, accuracy=0.0884] 84%|████████▍ | 53/63 [00:15<00:02,  3.52it/s, accuracy=0.0884] 84%|████████▍ | 53/63 [00:15<00:02,  3.52it/s, accuracy=0.0868] 86%|████████▌ | 54/63 [00:15<00:02,  3.06it/s, accuracy=0.0868] 86%|████████▌ | 54/63 [00:16<00:02,  3.06it/s, accuracy=0.0881] 87%|████████▋ | 55/63 [00:16<00:02,  3.63it/s, accuracy=0.0881] 87%|████████▋ | 55/63 [00:16<00:02,  3.63it/s, accuracy=0.0865] 89%|████████▉ | 56/63 [00:16<00:02,  3.03it/s, accuracy=0.0865] 89%|████████▉ | 56/63 [00:16<00:02,  3.03it/s, accuracy=0.0894] 90%|█████████ | 57/63 [00:16<00:01,  3.61it/s, accuracy=0.0894] 90%|█████████ | 57/63 [00:17<00:01,  3.61it/s, accuracy=0.0878] 92%|█████████▏| 58/63 [00:17<00:01,  3.09it/s, accuracy=0.0878] 92%|█████████▏| 58/63 [00:17<00:01,  3.09it/s, accuracy=0.0911] 94%|█████████▎| 59/63 [00:17<00:01,  3.68it/s, accuracy=0.0911] 94%|█████████▎| 59/63 [00:17<00:01,  3.68it/s, accuracy=0.0896] 95%|█████████▌| 60/63 [00:17<00:00,  3.04it/s, accuracy=0.0896] 95%|█████████▌| 60/63 [00:17<00:00,  3.04it/s, accuracy=0.0938] 97%|█████████▋| 61/63 [00:17<00:00,  3.62it/s, accuracy=0.0938] 97%|█████████▋| 61/63 [00:18<00:00,  3.62it/s, accuracy=0.0922] 98%|█████████▊| 62/63 [00:18<00:00,  3.09it/s, accuracy=0.0922] 98%|█████████▊| 62/63 [00:18<00:00,  3.09it/s, accuracy=0.0945]100%|██████████| 63/63 [00:18<00:00,  3.42it/s, accuracy=0.0945]
Final Accuracy : 0.0945
Average Loss: 0.4986519331932068
Confusion matrix and metrics saved for model: RoTTA+FOA(ResNet18)
../Attacks/CIFAR-10/ResNet18/PGD
===> begin calculating mean and variance for ResNet18
===> calculating mean and variance for ResNet18 end
  0%|          | 0/63 [00:00<?, ?it/s]  0%|          | 0/63 [00:00<?, ?it/s, accuracy=0]  2%|▏         | 1/63 [00:00<00:50,  1.22it/s, accuracy=0]  2%|▏         | 1/63 [00:01<00:50,  1.22it/s, accuracy=0]  3%|▎         | 2/63 [00:01<00:44,  1.38it/s, accuracy=0]  3%|▎         | 2/63 [00:02<00:44,  1.38it/s, accuracy=0.0521]  5%|▍         | 3/63 [00:02<00:46,  1.29it/s, accuracy=0.0521]  5%|▍         | 3/63 [00:03<00:46,  1.29it/s, accuracy=0.0391]  6%|▋         | 4/63 [00:03<00:44,  1.32it/s, accuracy=0.0391]  6%|▋         | 4/63 [00:03<00:44,  1.32it/s, accuracy=0.0375]  8%|▊         | 5/63 [00:03<00:45,  1.28it/s, accuracy=0.0375]  8%|▊         | 5/63 [00:04<00:45,  1.28it/s, accuracy=0.0312] 10%|▉         | 6/63 [00:04<00:47,  1.21it/s, accuracy=0.0312] 10%|▉         | 6/63 [00:05<00:47,  1.21it/s, accuracy=0.0268] 11%|█         | 7/63 [00:05<00:47,  1.18it/s, accuracy=0.0268] 11%|█         | 7/63 [00:06<00:47,  1.18it/s, accuracy=0.0234] 13%|█▎        | 8/63 [00:06<00:47,  1.15it/s, accuracy=0.0234] 13%|█▎        | 8/63 [00:07<00:47,  1.15it/s, accuracy=0.0208] 14%|█▍        | 9/63 [00:07<00:47,  1.14it/s, accuracy=0.0208] 14%|█▍        | 9/63 [00:08<00:47,  1.14it/s, accuracy=0.0187] 16%|█▌        | 10/63 [00:08<00:47,  1.12it/s, accuracy=0.0187] 16%|█▌        | 10/63 [00:09<00:47,  1.12it/s, accuracy=0.0227] 17%|█▋        | 11/63 [00:09<00:46,  1.12it/s, accuracy=0.0227] 17%|█▋        | 11/63 [00:10<00:46,  1.12it/s, accuracy=0.0208] 19%|█▉        | 12/63 [00:10<00:46,  1.11it/s, accuracy=0.0208] 19%|█▉        | 12/63 [00:11<00:46,  1.11it/s, accuracy=0.0192] 21%|██        | 13/63 [00:11<00:44,  1.13it/s, accuracy=0.0192] 21%|██        | 13/63 [00:12<00:44,  1.13it/s, accuracy=0.0179] 22%|██▏       | 14/63 [00:12<00:44,  1.09it/s, accuracy=0.0179] 22%|██▏       | 14/63 [00:13<00:44,  1.09it/s, accuracy=0.0187] 24%|██▍       | 15/63 [00:13<00:44,  1.08it/s, accuracy=0.0187] 24%|██▍       | 15/63 [00:13<00:44,  1.08it/s, accuracy=0.0176] 25%|██▌       | 16/63 [00:13<00:43,  1.07it/s, accuracy=0.0176] 25%|██▌       | 16/63 [00:14<00:43,  1.07it/s, accuracy=0.0184] 27%|██▋       | 17/63 [00:14<00:41,  1.10it/s, accuracy=0.0184] 27%|██▋       | 17/63 [00:15<00:41,  1.10it/s, accuracy=0.0174] 29%|██▊       | 18/63 [00:15<00:40,  1.10it/s, accuracy=0.0174] 29%|██▊       | 18/63 [00:16<00:40,  1.10it/s, accuracy=0.0164] 30%|███       | 19/63 [00:16<00:39,  1.11it/s, accuracy=0.0164] 30%|███       | 19/63 [00:17<00:39,  1.11it/s, accuracy=0.0156] 32%|███▏      | 20/63 [00:17<00:38,  1.11it/s, accuracy=0.0156] 32%|███▏      | 20/63 [00:18<00:38,  1.11it/s, accuracy=0.0149] 33%|███▎      | 21/63 [00:18<00:37,  1.11it/s, accuracy=0.0149] 33%|███▎      | 21/63 [00:19<00:37,  1.11it/s, accuracy=0.0142] 35%|███▍      | 22/63 [00:19<00:37,  1.09it/s, accuracy=0.0142] 35%|███▍      | 22/63 [00:20<00:37,  1.09it/s, accuracy=0.0149] 37%|███▋      | 23/63 [00:20<00:35,  1.11it/s, accuracy=0.0149] 37%|███▋      | 23/63 [00:21<00:35,  1.11it/s, accuracy=0.0143] 38%|███▊      | 24/63 [00:21<00:35,  1.11it/s, accuracy=0.0143] 38%|███▊      | 24/63 [00:22<00:35,  1.11it/s, accuracy=0.015]  40%|███▉      | 25/63 [00:22<00:34,  1.11it/s, accuracy=0.015] 40%|███▉      | 25/63 [00:22<00:34,  1.11it/s, accuracy=0.0144] 41%|████▏     | 26/63 [00:22<00:33,  1.10it/s, accuracy=0.0144] 41%|████▏     | 26/63 [00:23<00:33,  1.10it/s, accuracy=0.0139] 43%|████▎     | 27/63 [00:23<00:32,  1.10it/s, accuracy=0.0139] 43%|████▎     | 27/63 [00:24<00:32,  1.10it/s, accuracy=0.0134] 44%|████▍     | 28/63 [00:24<00:32,  1.09it/s, accuracy=0.0134] 44%|████▍     | 28/63 [00:25<00:32,  1.09it/s, accuracy=0.0129] 46%|████▌     | 29/63 [00:25<00:31,  1.10it/s, accuracy=0.0129] 46%|████▌     | 29/63 [00:26<00:31,  1.10it/s, accuracy=0.0125] 48%|████▊     | 30/63 [00:26<00:30,  1.10it/s, accuracy=0.0125] 48%|████▊     | 30/63 [00:27<00:30,  1.10it/s, accuracy=0.0131] 49%|████▉     | 31/63 [00:27<00:28,  1.11it/s, accuracy=0.0131] 49%|████▉     | 31/63 [00:28<00:28,  1.11it/s, accuracy=0.0127] 51%|█████     | 32/63 [00:28<00:28,  1.07it/s, accuracy=0.0127] 51%|█████     | 32/63 [00:29<00:28,  1.07it/s, accuracy=0.0123] 52%|█████▏    | 33/63 [00:29<00:27,  1.08it/s, accuracy=0.0123] 52%|█████▏    | 33/63 [00:30<00:27,  1.08it/s, accuracy=0.0119] 54%|█████▍    | 34/63 [00:30<00:27,  1.05it/s, accuracy=0.0119] 54%|█████▍    | 34/63 [00:31<00:27,  1.05it/s, accuracy=0.0116] 56%|█████▌    | 35/63 [00:31<00:25,  1.08it/s, accuracy=0.0116] 56%|█████▌    | 35/63 [00:32<00:25,  1.08it/s, accuracy=0.0113] 57%|█████▋    | 36/63 [00:32<00:24,  1.08it/s, accuracy=0.0113] 57%|█████▋    | 36/63 [00:33<00:24,  1.08it/s, accuracy=0.0118] 59%|█████▊    | 37/63 [00:33<00:23,  1.10it/s, accuracy=0.0118] 59%|█████▊    | 37/63 [00:34<00:23,  1.10it/s, accuracy=0.0115] 60%|██████    | 38/63 [00:34<00:23,  1.07it/s, accuracy=0.0115] 60%|██████    | 38/63 [00:35<00:23,  1.07it/s, accuracy=0.0112] 62%|██████▏   | 39/63 [00:35<00:22,  1.07it/s, accuracy=0.0112] 62%|██████▏   | 39/63 [00:36<00:22,  1.07it/s, accuracy=0.0109] 63%|██████▎   | 40/63 [00:36<00:22,  1.04it/s, accuracy=0.0109] 63%|██████▎   | 40/63 [00:36<00:22,  1.04it/s, accuracy=0.0107] 65%|██████▌   | 41/63 [00:36<00:20,  1.07it/s, accuracy=0.0107] 65%|██████▌   | 41/63 [00:37<00:20,  1.07it/s, accuracy=0.0104] 67%|██████▋   | 42/63 [00:37<00:19,  1.08it/s, accuracy=0.0104] 67%|██████▋   | 42/63 [00:38<00:19,  1.08it/s, accuracy=0.0102] 68%|██████▊   | 43/63 [00:38<00:18,  1.10it/s, accuracy=0.0102] 68%|██████▊   | 43/63 [00:39<00:18,  1.10it/s, accuracy=0.00994] 70%|██████▉   | 44/63 [00:39<00:17,  1.06it/s, accuracy=0.00994] 70%|██████▉   | 44/63 [00:40<00:17,  1.06it/s, accuracy=0.00972] 71%|███████▏  | 45/63 [00:40<00:16,  1.09it/s, accuracy=0.00972] 71%|███████▏  | 45/63 [00:41<00:16,  1.09it/s, accuracy=0.00951] 73%|███████▎  | 46/63 [00:41<00:15,  1.09it/s, accuracy=0.00951] 73%|███████▎  | 46/63 [00:42<00:15,  1.09it/s, accuracy=0.0113]  75%|███████▍  | 47/63 [00:42<00:14,  1.11it/s, accuracy=0.0113] 75%|███████▍  | 47/63 [00:43<00:14,  1.11it/s, accuracy=0.0111] 76%|███████▌  | 48/63 [00:43<00:13,  1.10it/s, accuracy=0.0111] 76%|███████▌  | 48/63 [00:44<00:13,  1.10it/s, accuracy=0.0128] 78%|███████▊  | 49/63 [00:44<00:12,  1.09it/s, accuracy=0.0128] 78%|███████▊  | 49/63 [00:45<00:12,  1.09it/s, accuracy=0.0125] 79%|███████▉  | 50/63 [00:45<00:12,  1.05it/s, accuracy=0.0125] 79%|███████▉  | 50/63 [00:46<00:12,  1.05it/s, accuracy=0.0123] 81%|████████  | 51/63 [00:46<00:11,  1.07it/s, accuracy=0.0123] 81%|████████  | 51/63 [00:47<00:11,  1.07it/s, accuracy=0.012]  83%|████████▎ | 52/63 [00:47<00:10,  1.07it/s, accuracy=0.012] 83%|████████▎ | 52/63 [00:47<00:10,  1.07it/s, accuracy=0.0124] 84%|████████▍ | 53/63 [00:47<00:09,  1.08it/s, accuracy=0.0124] 84%|████████▍ | 53/63 [00:48<00:09,  1.08it/s, accuracy=0.0122] 86%|████████▌ | 54/63 [00:48<00:08,  1.07it/s, accuracy=0.0122] 86%|████████▌ | 54/63 [00:49<00:08,  1.07it/s, accuracy=0.0159] 87%|████████▋ | 55/63 [00:49<00:07,  1.09it/s, accuracy=0.0159] 87%|████████▋ | 55/63 [00:50<00:07,  1.09it/s, accuracy=0.0156] 89%|████████▉ | 56/63 [00:50<00:06,  1.06it/s, accuracy=0.0156] 89%|████████▉ | 56/63 [00:51<00:06,  1.06it/s, accuracy=0.0154] 90%|█████████ | 57/63 [00:51<00:05,  1.05it/s, accuracy=0.0154] 90%|█████████ | 57/63 [00:52<00:05,  1.05it/s, accuracy=0.0151] 92%|█████████▏| 58/63 [00:52<00:04,  1.06it/s, accuracy=0.0151] 92%|█████████▏| 58/63 [00:53<00:04,  1.06it/s, accuracy=0.0148] 94%|█████████▎| 59/63 [00:53<00:03,  1.04it/s, accuracy=0.0148] 94%|█████████▎| 59/63 [00:54<00:03,  1.04it/s, accuracy=0.0146] 95%|█████████▌| 60/63 [00:54<00:02,  1.01it/s, accuracy=0.0146] 95%|█████████▌| 60/63 [00:55<00:02,  1.01it/s, accuracy=0.0159] 97%|█████████▋| 61/63 [00:55<00:01,  1.02it/s, accuracy=0.0159] 97%|█████████▋| 61/63 [00:56<00:01,  1.02it/s, accuracy=0.0156] 98%|█████████▊| 62/63 [00:56<00:00,  1.02it/s, accuracy=0.0156] 98%|█████████▊| 62/63 [00:57<00:00,  1.02it/s, accuracy=0.017] 100%|██████████| 63/63 [00:57<00:00,  1.21it/s, accuracy=0.017]100%|██████████| 63/63 [00:57<00:00,  1.10it/s, accuracy=0.017]
Final Accuracy : 0.017
Average Loss: 0.882834324836731
Confusion matrix and metrics saved for model: RoTTA+FOA(ResNet18)
../Attacks/CIFAR-10/ResNet18/CW
===> begin calculating mean and variance for ResNet18
===> calculating mean and variance for ResNet18 end
  0%|          | 0/63 [00:00<?, ?it/s]  0%|          | 0/63 [00:16<?, ?it/s, accuracy=0.844]  2%|▏         | 1/63 [00:16<17:18, 16.75s/it, accuracy=0.844]  2%|▏         | 1/63 [00:28<17:18, 16.75s/it, accuracy=0.922]  3%|▎         | 2/63 [00:28<14:09, 13.93s/it, accuracy=0.922]  3%|▎         | 2/63 [00:45<14:09, 13.93s/it, accuracy=0.917]  5%|▍         | 3/63 [00:45<15:15, 15.26s/it, accuracy=0.917]  5%|▍         | 3/63 [00:57<15:15, 15.26s/it, accuracy=0.914]  6%|▋         | 4/63 [00:57<13:47, 14.02s/it, accuracy=0.914]  6%|▋         | 4/63 [01:14<13:47, 14.02s/it, accuracy=0.906]  8%|▊         | 5/63 [01:14<14:36, 15.12s/it, accuracy=0.906]  8%|▊         | 5/63 [01:38<14:36, 15.12s/it, accuracy=0.906] 10%|▉         | 6/63 [01:38<17:16, 18.18s/it, accuracy=0.906] 10%|▉         | 6/63 [01:56<17:16, 18.18s/it, accuracy=0.906] 11%|█         | 7/63 [01:56<16:41, 17.88s/it, accuracy=0.906] 11%|█         | 7/63 [02:08<16:41, 17.88s/it, accuracy=0.914] 13%|█▎        | 8/63 [02:08<14:51, 16.22s/it, accuracy=0.914] 13%|█▎        | 8/63 [02:26<14:51, 16.22s/it, accuracy=0.917] 14%|█▍        | 9/63 [02:26<14:56, 16.61s/it, accuracy=0.917] 14%|█▍        | 9/63 [02:38<14:56, 16.61s/it, accuracy=0.919] 16%|█▌        | 10/63 [02:38<13:34, 15.36s/it, accuracy=0.919] 16%|█▌        | 10/63 [02:56<13:34, 15.36s/it, accuracy=0.923] 17%|█▋        | 11/63 [02:56<13:53, 16.03s/it, accuracy=0.923] 17%|█▋        | 11/63 [03:08<13:53, 16.03s/it, accuracy=0.927] 19%|█▉        | 12/63 [03:08<12:43, 14.98s/it, accuracy=0.927] 19%|█▉        | 12/63 [03:26<12:43, 14.98s/it, accuracy=0.918] 21%|██        | 13/63 [03:26<13:08, 15.78s/it, accuracy=0.918] 21%|██        | 13/63 [03:39<13:08, 15.78s/it, accuracy=0.917] 22%|██▏       | 14/63 [03:39<12:08, 14.86s/it, accuracy=0.917] 22%|██▏       | 14/63 [03:56<12:08, 14.86s/it, accuracy=0.919] 24%|██▍       | 15/63 [03:56<12:33, 15.70s/it, accuracy=0.919] 24%|██▍       | 15/63 [04:09<12:33, 15.70s/it, accuracy=0.912] 25%|██▌       | 16/63 [04:09<11:36, 14.81s/it, accuracy=0.912] 25%|██▌       | 16/63 [04:27<11:36, 14.81s/it, accuracy=0.915] 27%|██▋       | 17/63 [04:27<12:04, 15.75s/it, accuracy=0.915] 27%|██▋       | 17/63 [04:46<12:04, 15.75s/it, accuracy=0.913] 29%|██▊       | 18/63 [04:46<12:33, 16.74s/it, accuracy=0.913] 29%|██▊       | 18/63 [05:04<12:33, 16.74s/it, accuracy=0.908] 30%|███       | 19/63 [05:04<12:28, 17.01s/it, accuracy=0.908] 30%|███       | 19/63 [05:17<12:28, 17.01s/it, accuracy=0.894] 32%|███▏      | 20/63 [05:17<11:16, 15.73s/it, accuracy=0.894] 32%|███▏      | 20/63 [05:34<11:16, 15.73s/it, accuracy=0.885] 33%|███▎      | 21/63 [05:34<11:22, 16.26s/it, accuracy=0.885] 33%|███▎      | 21/63 [05:47<11:22, 16.26s/it, accuracy=0.878] 35%|███▍      | 22/63 [05:47<10:23, 15.20s/it, accuracy=0.878] 35%|███▍      | 22/63 [06:04<10:23, 15.20s/it, accuracy=0.868] 37%|███▋      | 23/63 [06:04<10:36, 15.92s/it, accuracy=0.868] 37%|███▋      | 23/63 [06:17<10:36, 15.92s/it, accuracy=0.862] 38%|███▊      | 24/63 [06:17<09:44, 14.98s/it, accuracy=0.862] 38%|███▊      | 24/63 [06:35<09:44, 14.98s/it, accuracy=0.855] 40%|███▉      | 25/63 [06:35<09:58, 15.74s/it, accuracy=0.855] 40%|███▉      | 25/63 [06:47<09:58, 15.74s/it, accuracy=0.85]  41%|████▏     | 26/63 [06:47<09:09, 14.84s/it, accuracy=0.85] 41%|████▏     | 26/63 [07:05<09:09, 14.84s/it, accuracy=0.852] 43%|████▎     | 27/63 [07:05<09:23, 15.67s/it, accuracy=0.852] 43%|████▎     | 27/63 [07:18<09:23, 15.67s/it, accuracy=0.855] 44%|████▍     | 28/63 [07:18<08:37, 14.79s/it, accuracy=0.855] 44%|████▍     | 28/63 [07:44<08:37, 14.79s/it, accuracy=0.853] 46%|████▌     | 29/63 [07:44<10:18, 18.19s/it, accuracy=0.853] 46%|████▌     | 29/63 [08:09<10:18, 18.19s/it, accuracy=0.854] 48%|████▊     | 30/63 [08:09<11:05, 20.18s/it, accuracy=0.854] 48%|████▊     | 30/63 [08:35<11:05, 20.18s/it, accuracy=0.858] 49%|████▉     | 31/63 [08:35<11:43, 21.98s/it, accuracy=0.858] 49%|████▉     | 31/63 [08:48<11:43, 21.98s/it, accuracy=0.856] 51%|█████     | 32/63 [08:48<09:55, 19.20s/it, accuracy=0.856] 51%|█████     | 32/63 [09:14<09:55, 19.20s/it, accuracy=0.858] 52%|█████▏    | 33/63 [09:14<10:39, 21.30s/it, accuracy=0.858] 52%|█████▏    | 33/63 [09:27<10:39, 21.30s/it, accuracy=0.858] 54%|█████▍    | 34/63 [09:27<09:03, 18.73s/it, accuracy=0.858] 54%|█████▍    | 34/63 [09:44<09:03, 18.73s/it, accuracy=0.855] 56%|█████▌    | 35/63 [09:44<08:34, 18.37s/it, accuracy=0.855] 56%|█████▌    | 35/63 [09:57<08:34, 18.37s/it, accuracy=0.855] 57%|█████▋    | 36/63 [09:57<07:29, 16.64s/it, accuracy=0.855] 57%|█████▋    | 36/63 [10:14<07:29, 16.64s/it, accuracy=0.856] 59%|█████▊    | 37/63 [10:14<07:19, 16.92s/it, accuracy=0.856] 59%|█████▊    | 37/63 [10:27<07:19, 16.92s/it, accuracy=0.859] 60%|██████    | 38/63 [10:27<06:31, 15.67s/it, accuracy=0.859] 60%|██████    | 38/63 [10:45<06:31, 15.67s/it, accuracy=0.861] 62%|██████▏   | 39/63 [10:45<06:29, 16.23s/it, accuracy=0.861] 62%|██████▏   | 39/63 [10:57<06:29, 16.23s/it, accuracy=0.863] 63%|██████▎   | 40/63 [10:57<05:49, 15.17s/it, accuracy=0.863] 63%|██████▎   | 40/63 [11:24<05:49, 15.17s/it, accuracy=0.865] 65%|██████▌   | 41/63 [11:24<06:47, 18.50s/it, accuracy=0.865] 65%|██████▌   | 41/63 [11:36<06:47, 18.50s/it, accuracy=0.867] 67%|██████▋   | 42/63 [11:36<05:52, 16.79s/it, accuracy=0.867] 67%|██████▋   | 42/63 [12:20<05:52, 16.79s/it, accuracy=0.87]  68%|██████▊   | 43/63 [12:20<08:16, 24.80s/it, accuracy=0.87] 68%|██████▊   | 43/63 [12:39<08:16, 24.80s/it, accuracy=0.869] 70%|██████▉   | 44/63 [12:39<07:17, 23.00s/it, accuracy=0.869] 70%|██████▉   | 44/63 [12:56<07:17, 23.00s/it, accuracy=0.872] 71%|███████▏  | 45/63 [12:56<06:24, 21.38s/it, accuracy=0.872] 71%|███████▏  | 45/63 [13:15<06:24, 21.38s/it, accuracy=0.874] 73%|███████▎  | 46/63 [13:15<05:50, 20.60s/it, accuracy=0.874] 73%|███████▎  | 46/63 [13:50<05:50, 20.60s/it, accuracy=0.874] 75%|███████▍  | 47/63 [13:50<06:38, 24.89s/it, accuracy=0.874] 75%|███████▍  | 47/63 [14:03<06:38, 24.89s/it, accuracy=0.876] 76%|███████▌  | 48/63 [14:03<05:18, 21.24s/it, accuracy=0.876] 76%|███████▌  | 48/63 [14:29<05:18, 21.24s/it, accuracy=0.877] 78%|███████▊  | 49/63 [14:29<05:18, 22.73s/it, accuracy=0.877] 78%|███████▊  | 49/63 [14:41<05:18, 22.73s/it, accuracy=0.879] 79%|███████▉  | 50/63 [14:41<04:16, 19.71s/it, accuracy=0.879] 79%|███████▉  | 50/63 [14:59<04:16, 19.71s/it, accuracy=0.881] 81%|████████  | 51/63 [14:59<03:48, 19.06s/it, accuracy=0.881] 81%|████████  | 51/63 [15:24<03:48, 19.06s/it, accuracy=0.882] 83%|████████▎ | 52/63 [15:24<03:48, 20.81s/it, accuracy=0.882] 83%|████████▎ | 52/63 [15:50<03:48, 20.81s/it, accuracy=0.883] 84%|████████▍ | 53/63 [15:50<03:44, 22.42s/it, accuracy=0.883] 84%|████████▍ | 53/63 [16:09<03:44, 22.42s/it, accuracy=0.883] 86%|████████▌ | 54/63 [16:09<03:12, 21.34s/it, accuracy=0.883] 86%|████████▌ | 54/63 [16:26<03:12, 21.34s/it, accuracy=0.885] 87%|████████▋ | 55/63 [16:26<02:41, 20.19s/it, accuracy=0.885] 87%|████████▋ | 55/63 [16:46<02:41, 20.19s/it, accuracy=0.886] 89%|████████▉ | 56/63 [16:46<02:19, 19.95s/it, accuracy=0.886] 89%|████████▉ | 56/63 [17:03<02:19, 19.95s/it, accuracy=0.887] 90%|█████████ | 57/63 [17:03<01:54, 19.16s/it, accuracy=0.887] 90%|█████████ | 57/63 [17:22<01:54, 19.16s/it, accuracy=0.888] 92%|█████████▏| 58/63 [17:22<01:34, 18.98s/it, accuracy=0.888] 92%|█████████▏| 58/63 [17:39<01:34, 18.98s/it, accuracy=0.888] 94%|█████████▎| 59/63 [17:39<01:13, 18.49s/it, accuracy=0.888] 94%|█████████▎| 59/63 [17:52<01:13, 18.49s/it, accuracy=0.89]  95%|█████████▌| 60/63 [17:52<00:50, 16.71s/it, accuracy=0.89] 95%|█████████▌| 60/63 [18:09<00:50, 16.71s/it, accuracy=0.891] 97%|█████████▋| 61/63 [18:09<00:33, 16.91s/it, accuracy=0.891] 97%|█████████▋| 61/63 [18:28<00:33, 16.91s/it, accuracy=0.893] 98%|█████████▊| 62/63 [18:28<00:17, 17.41s/it, accuracy=0.893] 98%|█████████▊| 62/63 [18:41<00:17, 17.41s/it, accuracy=0.892]100%|██████████| 63/63 [18:41<00:00, 16.33s/it, accuracy=0.892]100%|██████████| 63/63 [18:41<00:00, 17.81s/it, accuracy=0.892]
Final Accuracy : 0.8925
Average Loss: 0.014211274223402142
Confusion matrix and metrics saved for model: RoTTA+FOA(ResNet18)
../Attacks/CIFAR-10/ResNet18/AutoAttack
===> begin calculating mean and variance for ResNet18
===> calculating mean and variance for ResNet18 end
  0%|          | 0/63 [00:00<?, ?it/s]/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/numpy/lib/function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|          | 0/63 [00:06<?, ?it/s]
using Standard version including .
Warning: it seems to be a randomized defense! Please use version="rand". See flags_doc.md for details.
initial accuracy: 59.65%
max Linf perturbation: 0.00000, nan in tensor: 0, max: 1.00000, min: 0.00000
robust accuracy: 59.65%
Final Accuracy : 0.5964999794960022
Average Loss: 0.0
Confusion matrix and metrics saved for model: RoTTA+FOA(ResNet18)
../Attacks/CIFAR-10/MobileNetV2/FGSM
===> begin calculating mean and variance for ResNet18
===> calculating mean and variance for ResNet18 end
  0%|          | 0/63 [00:00<?, ?it/s]  0%|          | 0/63 [00:00<?, ?it/s, accuracy=0]  2%|▏         | 1/63 [00:00<00:12,  5.08it/s, accuracy=0]  2%|▏         | 1/63 [00:00<00:12,  5.08it/s, accuracy=0]  3%|▎         | 2/63 [00:00<00:15,  3.96it/s, accuracy=0]  3%|▎         | 2/63 [00:00<00:15,  3.96it/s, accuracy=0.0104]  5%|▍         | 3/63 [00:00<00:13,  4.35it/s, accuracy=0.0104]  5%|▍         | 3/63 [00:01<00:13,  4.35it/s, accuracy=0.0234]  6%|▋         | 4/63 [00:01<00:17,  3.31it/s, accuracy=0.0234]  6%|▋         | 4/63 [00:01<00:17,  3.31it/s, accuracy=0.0187]  8%|▊         | 5/63 [00:01<00:15,  3.75it/s, accuracy=0.0187]  8%|▊         | 5/63 [00:01<00:15,  3.75it/s, accuracy=0.0156] 10%|▉         | 6/63 [00:01<00:17,  3.22it/s, accuracy=0.0156] 10%|▉         | 6/63 [00:01<00:17,  3.22it/s, accuracy=0.0134] 11%|█         | 7/63 [00:01<00:15,  3.62it/s, accuracy=0.0134] 11%|█         | 7/63 [00:02<00:15,  3.62it/s, accuracy=0.0117] 13%|█▎        | 8/63 [00:02<00:17,  3.18it/s, accuracy=0.0117] 13%|█▎        | 8/63 [00:02<00:17,  3.18it/s, accuracy=0.0104] 14%|█▍        | 9/63 [00:02<00:15,  3.56it/s, accuracy=0.0104] 14%|█▍        | 9/63 [00:02<00:15,  3.56it/s, accuracy=0.00937] 16%|█▌        | 10/63 [00:02<00:16,  3.16it/s, accuracy=0.00937] 16%|█▌        | 10/63 [00:03<00:16,  3.16it/s, accuracy=0.00852] 17%|█▋        | 11/63 [00:03<00:14,  3.53it/s, accuracy=0.00852] 17%|█▋        | 11/63 [00:03<00:14,  3.53it/s, accuracy=0.00781] 19%|█▉        | 12/63 [00:03<00:16,  3.13it/s, accuracy=0.00781] 19%|█▉        | 12/63 [00:03<00:16,  3.13it/s, accuracy=0.00721] 21%|██        | 13/63 [00:03<00:14,  3.50it/s, accuracy=0.00721] 21%|██        | 13/63 [00:04<00:15,  3.23it/s, accuracy=0.00721]
Traceback (most recent call last):
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/main.py", line 64, in <module>
    main()
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/main.py", line 61, in main
    testTimeAdaptation(student, dataset_dir, model_name, attack)
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/main.py", line 46, in testTimeAdaptation
    evaluate_tta(loader, tta_model, student, f'RoTTA+FOA({model_name})', attack_type)
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/helper.py", line 112, in evaluate_tta
    output = tta_model(images)
             ^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/base_adapter.py", line 22, in forward
    outputs = self.forward_and_adapt(x, self.model, self.optimizer)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/rotta.py", line 39, in forward_and_adapt
    self.update_model(model, optimizer)
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/rotta.py", line 46, in update_model
    l = self.calculate_loss()
        ^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/rotta.py", line 66, in calculate_loss
    stu_sup_out = self.model(sup_data)      # Student model output (f_S)
                  ^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/timm/models/efficientnet.py", line 268, in forward
    x = self.forward_features(x)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/timm/models/efficientnet.py", line 256, in forward_features
    x = self.blocks(x)
        ^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/timm/models/_efficientnet_blocks.py", line 287, in forward
    x = self.bn1(x)
        ^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/miniconda3/envs/tta/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/project/Documents/RoTTA Enhancement/RoTTA/bn_layers.py", line 58, in forward
    x = (x - mean) / torch.sqrt(var + self.eps)
        ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 16.00 MiB. GPU 
